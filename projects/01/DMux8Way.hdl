// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            {0, 0, in, 0, 0, 0, 0, 0} if sel == 010
 *                            {0, 0, 0, in, 0, 0, 0, 0} if sel == 011
 *                            {0, 0, 0, 0, in, 0, 0, 0} if sel == 100
 *                            {0, 0, 0, 0, 0, in, 0, 0} if sel == 101
 *                            {0, 0, 0, 0, 0, 0, in, 0} if sel == 110
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not (in = sel[0], out = notSel0);
    Not (in = sel[1], out = notSel1);
    Not (in = sel[2], out = notSel2);
    And3 (a = notSel0, b = notSel1, c = notSel2, out = outA);
    And3 (a = sel[0], b = notSel1, c = notSel2, out = outB);
    And3 (a = notSel0, b = sel[1], c = notSel2, out = outC);
    And3 (a = sel[0], b = sel[1], c = notSel2, out = outD);
    And3 (a = notSel0, b = notSel1, c = sel[2], out = outE);
    And3 (a = sel[0], b = notSel1, c = sel[2], out = outF);
    And3 (a = notSel0, b = sel[1], c = sel[2], out = outG);
    And3 (a = sel[0], b = sel[1], c = sel[2], out = outH);
    And (a = in, b = outA, out = a);
    And (a = in, b = outB, out = b);
    And (a = in, b = outC, out = c);
    And (a = in, b = outD, out = d);
    And (a = in, b = outE, out = e);
    And (a = in, b = outF, out = f);
    And (a = in, b = outG, out = g);
    And (a = in, b = outH, out = h);
}